ls
l
ls
ls | where type == dir
ls | where type == file
ls
z 
cd /data/dev
ls
cd goserv
ls
ls | where type == file
ls | where type == dir
ls
cd ~/.config/
ls
ls | where modified > 4
ls | where modified > 4 days
ls | where modified > 4days
ls | where modified > $(date now)
ls | where modified > 4day
ls | where modified > 2024-02-02
ls | where modified > 2024-05-30
ls | where modified < 2024-05-30
ls | where modified < 2024-05-29
ls | where modified < 2024-05-28
ls | where modified < 2024-05-27
ls | where modified < 2024-05-26
ls | where modified < 2024-05-20
ls | where modified > 2024-05-20
ls | where modified > ((date now) - 5day)
ls | where modified > ((date now) - 4day)
date now
(date now) - 4day
ls -r | where modified > ((date now) - 4day)
ls -D | where modified > ((date now) - 4day)
ls | where modified > ((date now) - 4day)
ls
cd ..
ls
banner hhi
banner hi
banner
echo hi
ls
hx
helix
helix test.c
gcc test.c
./a.out
rm test*
rm a.out
"hi"
echo hi hi
sort-by --help 
ls
cd .config/
ls
ls | sort 
ls | sort-by modified
ls | sort-by -r modified
ls | to tomlk
ls | to toml
[1, 2, 3] | to toml
[1, 2, 3] | to yaml
ls | to yaml
ls | to html
ls | to csv
ls | to tsv
ls | to xml
ls | to plist
ls | to yml
ls | to json
ls | to md
ls | to nuon
ls
open starship.toml
bat starship.toml
open starship.toml | lines
open starship.toml | as string|  lines
open starship.toml | as string | lines
open starship.toml as string | lines
(open starship.toml) as string | lines
(open starship.toml) to string | lines
(open starship.toml)| into string | lines
ls
open user-dirs.dirs
open user-dirs.dirs | lines
open starship.toml | lines
open starship.toml
open starship.toml -r
open starship.toml -r | lines
ls 
ls | get name
ls
ls | get type
http get alnpi.local:8888/
http get http://alnpi.local:8888/
curl http://alnpi.local:8888/
http get http://alnpi.local:8888/
http get http://alnpi.local:8888/dash
http get http://alnpi.local:8888/uptime
http get https://blog.rust-lang.org/feed.xml
l
ls
ls zed
ls zed | get name
ls zed | get name | $in.0
ls zed | get name | $in.1
ls zed | get name | 1
ls zed | get name[1]
ls zed | get name
ls zed | get name | insert 5 hi
$last
ls zed | get name | insert 5.1
(ls zed | get name | insert 5).1
(ls zed | get name | insert 5 2).1
(ls zed | get name | insert 5 2).0
(ls zed | get name | insert 5 2).2
(ls zed | get name | insert 5 2).3
(ls zed | get name | insert 5 2).4
(ls zed | get name | insert 5 2).5
{<\n>name: "Sam"<\n>}
hi={<\n>name: "Sam"<\n>}
let hi={<\n>name: "Sam"<\n>}
let hi = {<\n>name: "Sam"<\n>}
$hi
$hi | insert "hello" i
ls 
ls | select name type
ls | select name type modified
ls | select name type modifie
ls
ls | reject size
$nu
$env
$env.Path
$env.Path | append .
$env.Path = $env.Path | append .
ls
zed
l
ls
$env.Path
path
path dirname
. path dirname 
. | path dirname 
ls
cd .config/
kls
ls
pavucontrol.ini | path dirname
echo pavucontrol.ini | path dirname
echo ~/pavucontrol.ini | path dirname
pwd
pwd | path drname
pwd | path dirname
eza
ls
l
ls
^ls
^cd
cd
starship
starship init
starship init nu
source | starship init nu
source (starship init nu)
(starship init nu) | source
let st = (starship init nu)
st
$st
source $st
const st = (starship init nu)
$st
export-env { $env.STARSHIP_SHELL = "nu"; load-env {<\n>    STARSHIP_SESSION_KEY: (random chars -l 16)<\n>    PROMPT_MULTILINE_INDICATOR: (<\n>        ^/usr/sbin/starship prompt --continuation<\n>    )<\n><\n>    # Does not play well with default character module.<\n>    # TODO: Also Use starship vi mode indicators?<\n>    PROMPT_INDICATOR: ""<\n><\n>    PROMPT_COMMAND: {||<\n>        # jobs are not supported<\n>        (<\n>            ^/usr/sbin/starship prompt<\n>                --cmd-duration $env.CMD_DURATION_MS<\n>                $"--status=($env.LAST_EXIT_CODE)"<\n>                --terminal-width (term size).columns<\n>        )<\n>    }<\n><\n>    config: ($env.config? | default {} | merge {<\n>        render_right_prompt_on_last_line: true<\n>    })<\n><\n>    PROMPT_COMMAND_RIGHT: {||<\n>        (<\n>            ^/usr/sbin/starship prompt<\n>                --right<\n>                --cmd-duration $env.CMD_DURATION_MS<\n>                $"--status=($env.LAST_EXIT_CODE)"<\n>                --terminal-width (term size).columns<\n>        )<\n>    }<\n>}}
ls
cd /data/dev
ls
cd goserv/
ls
$env.config.edit_mode = 'vi'
ls
asd
ls
ls out>ls.txt
(ls) out>ls.txt
ls | to yml | save ls.txt
helix ls.txt
rm ls.txt
date
date now
which ls
which helix
which helix | get path
cd (which helix | get path)
cd (which helix | get path).0
cd ((which helix | get path).0)
(which helix | get path).0
cd (((which helix | get path).0) | path dirname)
!?
'[{"name": "Alice", "age": 30}, {"name": "Bob", "age": 25}]'<\n>| from json<\n>| to json
'[{"name": "Alice", "age": 30}, {"name": "Bob", "age": 25}]'<\n>| from json
'[{"name": "Alice", "age": 30}, {"name": "Bob", "age": 25}]'<\n>| from json<\n>| to json
open ls
cd
open Documents
ls
'[1, 2, 3, 4, 5]'<\n>| from json<\n>| each { |x| $x * 2 }<\n># => ╭───┬────╮<\n># => │ 0 │  2 │<\n># => │ 1 │  4 │<\n># => │ 2 │  6 │<\n># => │ 3 │  8 │<\n># => │ 4 │ 10 │<\n># => ╰───┴────╯
'[1, 2, 3, 4, 5]'<\n>| from json<\n>| each { |x| $x * 2 }<\n>| to json
'[1, 2, 3, 4, 5]'<\n>| from json<\n>| each { |x| $x * 10 }<\n>| to json
ls
z
zed
zeditor 
cd /data/dev
ls
cd piserver/
open Cargo.toml
open Cargo.toml | bat
open Cargo.toml | echo
open Cargo.toml | echo $in
open Cargo.toml | bat $in
open Cargo.toml | bat ($in to toml)
open Cargo.toml | to toml | bat $in
open Cargo.toml | less
open Cargo.toml | less $in
open Cargo.toml | to toml | less $in
open Cargo.toml
open Cargo.toml | ^echo $in
open Cargo.toml | to toml | ^echo $in
bat Cargo.toml
open Cargo.toml
ls
ls | where name == Cargo.lock
ls | where name == target
ls | where name == target | each |i| i.name
ls | where name == target | each |i| {i.name}
ls | where name == target | each {|i| i}
ls | where name == target | each {|i| $i}
ls | where name == target | get name | each {|i| $i}
ls | where name == target | get name | each {|i| ls $i}
ls
ls | where size > 1000B | get name | each {|i| ls $i}
ls get name | each {|i| ls $i}
ls | get name | each {|i| ls $i}
ls
ls justfile
ssh aln@alnpi.local
ls
gs
git status
which gs
ls
gs
z /data/dev
cd .config/
ls
cd nushell/
ls
zoxide init nushell
zoxide init nushell | save -f zoxide.nu
ls
open zoxide.nu
ls
starship init nushell
starship init nu
starship init nu | save -f starship.nu
ls
$env.config\
$env.config
$env
$env | less
$env | more
$env | most
$env | explore
z /data/dev
ls
lks
ls
cd block2/
ls
config nu
config nu<\n><\n><\n><\n><\n>asd
z /data/dev
rg
rg hello
ls
rg peek
rg peek.exe
z
cd ~/.config/
ls
ls | where name == nushell
ls nu*
